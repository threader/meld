gtk-color-scheme = "base_color:#353535\nfg_color:#000000\ntooltip_fg_color:#86ABD9\nselected_bg_color:#4083d5\nselected_fg_color:#262626\ntext_color:#1A1A1A\nbg_color:#191919\ntooltip_bg_color:#1c242a\nlink_color:#0000ee\nvisited_link_color:#32144c"

style "meld-color-scheme" {



    # inserted line(s), also edge color block for added file in dir diff
    color["insert-bg"] = "#006000"
    color["insert-outline"] = shade(1.5, @insert-bg)
    # In dir diff, an added file's name
    color["insert-text"] = "Yellow"

    # Color block on edge for missing file in dir diff
    color["delete-bg"] = "#800000"
    color["delete-outline"] = shade(1.8, @delete-bg)
    # Not sure what this is for
    color["delete-text"] = "white"

    # Changed line(s), and edge color block for changed file in dir diff
    color["replace-bg"] = "#25507C"
    color["replace-outline"] = shade(1.8, @replace-bg)
    # Changed file in dir diff
    color["replace-text"] = "white"

    # Not sure what these are for
    color["conflict-bg"] = "#722534"
    color["conflict-outline"] = shade(1.8, @conflict-bg)
    color["conflict-text"] = "white"

    # Not sure what these are for
    color["error-bg"] = "#005F13"
    color["error-outline"] = shade(1.8, @error-bg)
    color["error-text"] = "white"

    # Added text on an existing changed line (per-word diffing)
    color["inline-bg"] = "#305030" # shade(1.3, @replace-bg)
    color["inline-fg"] = "Yellow"

    # Crossed-out (not present) file in dir diff view
    color["unknown-text"] = "Yellow"

    color["syncpoint-outline"] = "Yellow"
    # Currently selected chunk. Note: seems to automatically be blended with underlying color.
    color["current-chunk-highlight"] = "#4A4A4A"
   


	xthickness = 1
	ythickness = 1

	#######################
	# Style Properties
	#######################
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }
	GtkButton::image-spacing = 4
	GtkToolButton::icon-spacing = 4

	GtkCheckButton::indicator-size = 14

	GtkEntry::invisible-char = 0x2022

	GtkPaned::handle-size = 6

	GtkRange::trough-border = 0
	GtkRange::slider-width = 15
	GtkRange::stepper-size = 15

	GtkScale::slider-length = 23
	GtkScale::trough-side-details = 1

	GtkScrollbar::min-slider-length = 30
	GtkMenuBar::internal-padding = 0
	GtkExpander::expander-size = 16
	GtkToolbar::internal-padding = 1
	GtkTreeView::expander-size = 14
	GtkTreeView::vertical-separator = 0

	GtkMenu::horizontal-padding = 0
	GtkMenu::vertical-padding = 0

	WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	GtkEntry::honors-transparent-bg-hint = 1

	GtkEntry::progress-border = { 2, 2, 2, 2 }

	GtkWidget::link-color = @link_color
	GtkWidget::visited-link-color = @visited_link_color


    GtkButton::default_outside_border            = {0, 0, 0, 0}
    GtkButton::child_displacement_x              = 0
    GtkButton::child_displacement_y              = 1
    GtkButton::default_spacing                   = 4
    GtkButton::focus-padding                     = 0
    GtkCheckButton::indicator_size               = 14
    GtkMenuBar::internal-padding                 = 1
    GtkMenuBar::shadow_type                      = out
    GtkHandleBox::shadow_type                    = out
    GtkPaned::handle_full_size                   = 1
    GtkPaned::handle_size                        = 4
    GtkRadioButton::indicator_size               = 14
    GtkRange::stepper_size                       = 14
    GtkRange::stepper_spacing                    = 1
    GtkRange::trough_border                      = 0
    GtkScrollbar::has_backward_stepper           = 1
    GtkScrollbar::has_secondary_backward_stepper = 1
    GtkScrollbar::min_slider_length              = 10
    GtkToolbar::shadow_type                      = out
    GtkWidget::focus-line-width                  = 1
    GtkWidget::focus_padding                     = 1 
    GtkWidget::interior_focus                    = 1 
    GtkEntry::cursor_color                       = "#fcfcfc"
    GtkEntry::secondary_cursor_color             = "#fcfcfc"
    GtkTextView::cursor_color                    = "#fcfcfc"
    GtkTextView::secondary_cursor_color          = "#fcfcfc"
    GtkEntry::cursor_aspect_ratio                = 0.1
    GtkEntry::cursor_aspect_ratio                = 0.1
    

	####################
	# Color Definitions
	####################
    bg[NORMAL]        = "#101010"
    bg[PRELIGHT]      = "#003263"
    bg[SELECTED]      = mix (2.10, @bg_color, "#2e2e2e")
    bg[INSENSITIVE]   =  shade (1.6, @bg_color) # "#4c4952" #
    bg[ACTIVE]        = "#151515"

    fg[NORMAL]        = "#ffffff"
    fg[PRELIGHT]      = "#fcfcfc"
    fg[SELECTED]      = "#fcfcfc"
    fg[INSENSITIVE]   = "#151515"
    fg[ACTIVE]        = "#dadada"

    text[NORMAL]      = "#fcfcfc"
    text[PRELIGHT]    = "#fcfcfc"
    text[SELECTED]    = mix (0.7, @selected_fg_color, "#fcfcfc")
    text[INSENSITIVE] = darker (@fg_color)
    text[ACTIVE]      = "#fcfcfc"

    base[NORMAL]      = "#121212"
    base[PRELIGHT]    = shade (0.95, @bg_color)
    base[SELECTED]    = mix (0.7, @selected_fg_color, "#003263")
    base[INSENSITIVE] = darker (@bg_color)
    base[ACTIVE]      = shade (0.9, @selected_bg_color)

	engine "clearlooks" {
		colorize_scrollbar = FALSE # TRUE = blue scrollbars
		reliefstyle = 2
		menubarstyle = 1  # 0 = flat, 1 = sunken, 2 = flat gradient
		toolbarstyle = 1  # 0 = flat, 1 = enable effects
		animation = TRUE  # TRUE = animated progress bars
		radius = 3.0
		style = GLOSSY # GUMMY # GLOSSY

		# Set a hint to disable backward compatibility fallbacks.
		hint = "use-hints"
	}
}
style "button" = "default"
{
engine "pixmap"
{
image
{
function	= BOX
detail	= "buttondefault"
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= PRELIGHT
file		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= ACTIVE
file		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= INSENSITIVE
file		= "Buttons/button-insensitive.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
}

}

style "wide" {
	xthickness = 2
	ythickness = 2
}

style "wider" {
	xthickness = 3
	ythickness = 3
}

style "scrollbar" = "button" {
    xthickness = 2
    ythickness = 2

    bg[NORMAL] = shade (1.5, @selected_fg_color)
    bg[PRELIGHT] = shade (1.04, @selected_fg_color)
    bg[ACTIVE] = shade (0.96, @selected_fg_color)

engine "clearlooks" {
colorize_scrollbar = FALSE
reliefstyle = 2
menubarstyle = 2
toolbarstyle = 1
animation = TRUE
radius = 3.0
style = GUMMY

# Set a hint to disable backward compatibility fallbacks.
hint = "use-hints"
}

}
style "menustyle" = "default"
{
    xthickness = 0
    ythickness = 0
}

style "entry" {
	xthickness = 3
	ythickness = 3

	bg[SELECTED] = mix (0.4, @selected_bg_color, @base_color)
	fg[SELECTED] = @text_color

	engine "clearlooks" {
		focus_color = shade (0.65, @selected_bg_color)
	}
}

style "spinbutton" {

	engine "clearlooks" {
		hint = "spinbutton"
	}
}

style "scale" {
	xthickness = 2
	ythickness = 2

	engine "clearlooks" {
		hint = "scale"
	}
}

style "vscale" {

	engine "clearlooks" {
		hint = "vscale"
	}
}

style "hscale" {

	engine "clearlooks" {
		hint = "hscale"
	}
}

style "scrollbar" {
	xthickness = 2
	ythickness = 2

	engine "clearlooks" {
		hint = "scrollbar"
	}
}

style "hscrollbar" {

	engine "clearlooks" {
		hint = "hscrollbar"
	}
}

style "vscrollbar" {

	engine "clearlooks" {
		hint = "vscrollbar"
	}
}

style "notebook_bg" {

	bg[NORMAL]        = shade (1.06, @bg_color)

xthickness = 2
ythickness = 2
engine "pixmap"
{
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-bottom.png"
border	= {3,3,1,4}
stretch	= TRUE
gap_side	= TOP
}
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-top.png"
border	= {3,3,4,1}
stretch	= TRUE
gap_side	= BOTTOM
}
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-left.png"
border	= {4,1,3,3}
stretch	= TRUE
gap_side	= RIGHT
}
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-right.png"
border	= {1,4,3,3}
stretch	= TRUE
gap_side	= LEFT
}
image
{
function	= EXTENSION
file		= "Tabs/tab-top-active.png"
border	= {3,3,3,1}
stretch	= TRUE
gap_side	= BOTTOM
}
image
{
function	= EXTENSION
file		= "Tabs/tab-bottom-active.png"
border	= {3,3,1,3}
stretch	= TRUE
gap_side	= TOP
}
image
{
function	= EXTENSION
file		= "Tabs/tab-left-active.png"
border	= {3,1,3,3}
stretch	= TRUE
gap_side	= RIGHT
}
image
{
function	= EXTENSION
file		= "Tabs/tab-right-active.png"
border	= {1,3,3,3}
stretch	= TRUE
gap_side	= LEFT
}

image
{
function		= BOX_GAP
file			= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-top-left.png"
gap_start_border	= {1,0,1,0}
gap_end_file		= "Tabs/gap-top-right.png"
gap_end_border		= {0,1,1,0}
gap_side			= TOP
}
image
{
function			= BOX_GAP
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-bottom-left.png"
gap_start_border	= {1,0,1,0}
gap_end_file		= "Tabs/gap-bottom-right.png"
gap_end_border		= {0,1,1,0}
gap_side			= BOTTOM
}
image
{
function			= BOX_GAP
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-left-top.png"
gap_start_border	= {1,0,1,0}
gap_end_file		= "Tabs/gap-left-bottom.png"
gap_end_border		= {1,0,0,1}
gap_side			= LEFT
}
image
{
function			= BOX_GAP
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-right-top.png"
gap_start_border	= {0,1,1,0}
gap_end_file		= "Tabs/gap-right-bottom.png"
gap_end_border		= {0,1,0,1}
gap_side			= RIGHT
}

# Notebook with no tabs
image
{
function			= BOX
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
}
}
#engine "clearlooks" {}
}

widget_class "*BonoboDockItem"     style "menustyle"
class "*BonoboDockItem"            style "menustyle"
widget_class "*ToolBar"            style "menustyle"
class "*ToolBar"                   style "menustyle"
widget_class "*MenuBar"            style "menustyle"
class "*MenuBar"                   style "menustyle"


style "button" {
	xthickness = 3
	ythickness = 3

	bg[NORMAL]        = shade (0.64, @bg_color)
	bg[PRELIGHT]      = shade (0.46, @bg_color)
	bg[ACTIVE]        = shade (0.95, @bg_color)
}
widget_class "*Button*"            style "button"
class "*Button*"                   style "button"
widget_class "*button*"            style "button"
class "*button*"                   style "button"
widget_class "*OptionMenu*"        style "button"
class "*OptionMenu*"               style "button"
# widget_class "*Tree*"            style "button"
# class "*Tree*"                   style "button"
# widget_class "*GtkScale*"        style "button"
# class "*GtkScale*"               style "button"

# The color is changed by the notebook_bg style, this style
# changes the x/ythickness
style "notebook" {
	xthickness = 3
	ythickness = 3
}

style "statusbar" {

	engine "clearlooks" {
		hint = "statusbar"
	}
}

style "comboboxentry" {

	engine "clearlooks" {
		# Note:
		# If you set the appears-as-list option on comboboxes in the theme,
		# then you should set this hint on the combobox instead.
		hint = "comboboxentry"
	}
}

style "menubar" {

        GtkWidget::window-dragging = 1

	engine "clearlooks" {
		hint = "menubar"
	}
}

style "menu" {
	xthickness = 0
	ythickness = 0

	bg[NORMAL]        = shade (0.86, @selected_fg_color)
	engine "clearlooks" {
		radius = 0.0
	}
}

style "menu_item" {
	xthickness = 2
	ythickness = 3

	fg[PRELIGHT]      = mix (0.7, @selected_bg_color, @fg_color)
}

# This style is there to modify the separator menu items. The goals are:
# 1. Get a specific height.
# 2. The line should go to the edges (ie. no border at the left/right)
style "separator_menu_item" {
	xthickness = 1
	ythickness = 0

	GtkSeparatorMenuItem::horizontal-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 7
}

style "frame_title" {

	fg[NORMAL]        = lighter (@fg_color)
}

style "treeview" {

	engine "clearlooks" {
		hint = "treeview"
	}
}

style "toolbuttons" = "default"
{
xthickness = 1
ythickness = 1

GtkWidget::focus_padding = 2

engine "pixmap" {

image
{
function 	= BOX
state		= NORMAL
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= PRELIGHT
file 		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= ACTIVE
file 		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= INSENSITIVE
file 		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
}
}
widget_class "*Tool*GtkToggleButton" style "toolbuttons"
widget_class "*Tool*GtkButton" style "toolbuttons"

# The almost useless progress bar style
style "progressbar" {
	xthickness = 1
	ythickness = 1

	bg[NORMAL]      = shade (1.20, @selected_fg_color)
	fg[PRELIGHT]      = mix(1.20, @selected_bg_color, "#424244")

	engine "clearlooks" {
		# Explicitly set the radius for the progress bars inside menu items.
		radius = 3.0

		hint = "progressbar"
	}
}

# This style is based on the default style, so that the colors from the button
# style are overriden again.
style "treeview_header" = "default" {
	xthickness = 2
	ythickness = 1

	engine "clearlooks" {
		hint = "treeview-header"
	}
}

style "tooltips" {
	xthickness = 8
	ythickness = 4

	GtkWidget::new-tooltip-style = 1

	bg[NORMAL]        = mix (0.90, shade (0.05, @tooltip_bg_color), @tooltip_bg_color)
	fg[NORMAL]        = mix (0.65, shade (0.60, @tooltip_fg_color), @tooltip_bg_color)
}

style "nautilus_location" {

	bg[NORMAL]        = mix (0.60, shade (1.05, @bg_color), @selected_bg_color)
}

# Wrokaroudn style for places where the text color is used instead of the fg color.
style "text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style "menuitem_text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for places where the fg color is used instead of the text color.
style "fg_is_text_color_workaround" {

	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

# Style to set the toolbar to use a flat style. This is because the "New" button in
# Evolution is not drawn transparent. So if there is a gradient in the background it will
# look really wrong.
# See http://bugzilla.gnome.org/show_bug.cgi?id=446953.
style "evo_new_button_workaround" {

	engine "clearlooks" {
		toolbarstyle = 0
	}
}

style "layout" = "default"
{
engine "pixmap"
{
image
{
function	= SHADOW
detail	= "entry"
shadow	= IN
file		= "Shadows/text-.png"
border	= {1,1,1,1}
stretch	= TRUE
}
image
{
function	= BOX
detail	= "button"
state		= NORMAL
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
}
}
###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# The default style is applied to every widget
class "GtkWidget" style "meld-color-scheme"

class "GtkSeparator" style "wide"
class "GtkFrame" style "wide"
class "GtkCalendar" style "wide"
class "GtkEntry" style "entry"

class "GtkSpinButton" style "spinbutton"
class "GtkScale" style "scale"
class "GtkVScale" style "vscale"
class "GtkHScale" style "hscale"
class "GtkScrollbar" style "scrollbar"
class "GtkHScrollbar" style "hscrollbar"
class "GtkVScrollbar" style "vscrollbar"

# General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
widget_class "*<GtkNotebook>" style "notebook_bg"
# This is not perfect, it could be done better.
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLayout>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkViewport>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkScrolledWindow>" style "notebook_bg"

widget_class "*<GtkButton>" style "button"
widget_class "*<GtkNotebook>" style "notebook"
widget_class "*<GtkStatusbar>*" style "statusbar"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*" style "comboboxentry"

widget_class "*<GtkMenuBar>*" style "menubar"
widget_class "*<GtkMenu>*" style "menu"
widget_class "*<GtkMenuItem>*" style "menu_item"
widget_class "*<GtkSeparatorMenuItem>*" style "separator_menu_item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame_title"
widget_class "*.<GtkTreeView>*" style "treeview"

widget_class "*<GtkProgress>" style "progressbar"

# Treeview headers (and similar stock GTK+ widgets)
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>" style "treeview_header"

# The window of the tooltip is called "gtk-tooltip"
##################################################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
##################################################################
widget "gtk-tooltip*" style "tooltips"

##########################################################################
# Following are special cases and workarounds for issues in applications.
#      engine "xfce"
##########################################################################
