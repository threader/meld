commit 83f436b9112882d8d9e97f499cfb62372aff5316
Author: Christian Heimes <christian@python.org>
Date:   Fri Apr 23 13:51:40 2021 +0200

    bpo-43920: Make load_verify_locations(cadata) error message consistent (GH-25554)
    
    Signed-off-by: Christian Heimes <christian@python.org>

Index: python2.7-2.7.18/Lib/test/test_ssl.py
===================================================================
--- python2.7-2.7.18.orig/Lib/test/test_ssl.py
+++ python2.7-2.7.18/Lib/test/test_ssl.py
@@ -1047,12 +1047,17 @@ class ContextTests(unittest.TestCase):
         ctx = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
         self.assertRaises(TypeError, ctx.load_verify_locations, cadata=object)
 
-        with self.assertRaisesRegexp(ssl.SSLError, "no start line"):
+        with self.assertRaisesRegexp(
+            ssl.SSLError,
+            "no start line: cadata does not contain a certificate"
+        ):
             ctx.load_verify_locations(cadata=u"broken")
-        with self.assertRaisesRegexp(ssl.SSLError, "not enough data"):
+        with self.assertRaisesRegexp(
+            ssl.SSLError,
+            "not enough data: cadata does not contain a certificate"
+        ):
             ctx.load_verify_locations(cadata=b"broken")
 
-
     def test_load_dh_params(self):
         filename = u'dhpäräm.pem'
         fs_encoding = sys.getfilesystemencoding()
Index: python2.7-2.7.18/Modules/_ssl.c
===================================================================
--- python2.7-2.7.18.orig/Modules/_ssl.c
+++ python2.7-2.7.18/Modules/_ssl.c
@@ -2923,7 +2923,7 @@ _add_ca_certs(PySSLContext *self, void *
 {
     BIO *biobuf = NULL;
     X509_STORE *store;
-    int retval = 0, err, loaded = 0;
+    int retval = -1, err, loaded = 0;
 
     assert(filetype == SSL_FILETYPE_ASN1 || filetype == SSL_FILETYPE_PEM);
 
@@ -2977,23 +2977,32 @@ _add_ca_certs(PySSLContext *self, void *
     }
 
     err = ERR_peek_last_error();
-    if ((filetype == SSL_FILETYPE_ASN1) &&
-            (loaded > 0) &&
-            (ERR_GET_LIB(err) == ERR_LIB_ASN1) &&
-            (ERR_GET_REASON(err) == ASN1_R_HEADER_TOO_LONG)) {
+    if (loaded == 0) {
+        char *msg = NULL;
+        if (filetype == SSL_FILETYPE_PEM) {
+            msg = "no start line: cadata does not contain a certificate";
+        } else {
+            msg = "not enough data: cadata does not contain a certificate";
+        }
+        _setSSLError(msg, 0, __FILE__, __LINE__);
+        retval = -1;
+    } else if ((filetype == SSL_FILETYPE_ASN1) &&
+                    (ERR_GET_LIB(err) == ERR_LIB_ASN1) &&
+                    (ERR_GET_REASON(err) == ASN1_R_HEADER_TOO_LONG)) {
         /* EOF ASN1 file, not an error */
         ERR_clear_error();
         retval = 0;
     } else if ((filetype == SSL_FILETYPE_PEM) &&
-                   (loaded > 0) &&
                    (ERR_GET_LIB(err) == ERR_LIB_PEM) &&
                    (ERR_GET_REASON(err) == PEM_R_NO_START_LINE)) {
         /* EOF PEM file, not an error */
         ERR_clear_error();
         retval = 0;
-    } else {
+    } else if (err != 0) {
         _setSSLError(NULL, 0, __FILE__, __LINE__);
         retval = -1;
+    } else {
+        retval = 0;
     }
 
     BIO_free(biobuf);
